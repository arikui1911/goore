// Code generated by "stringer -type=TokenTag token.go"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Invalid-0]
	_ = x[EOF-1]
	_ = x[IntLiteral-2]
	_ = x[FloatLiteral-3]
	_ = x[StringLiteral-4]
	_ = x[Identifier-5]
	_ = x[Eq-6]
	_ = x[Ne-7]
	_ = x[Le-8]
	_ = x[Ge-9]
	_ = x[Lt-10]
	_ = x[Gt-11]
	_ = x[Add-12]
	_ = x[Sub-13]
	_ = x[Mul-14]
	_ = x[Div-15]
	_ = x[Mod-16]
	_ = x[Let-17]
	_ = x[LetAdd-18]
	_ = x[LetSub-19]
	_ = x[LetMul-20]
	_ = x[LetDiv-21]
	_ = x[LetMod-22]
	_ = x[Bang-23]
	_ = x[Arrow-24]
	_ = x[Comma-25]
	_ = x[Colon-26]
	_ = x[Semicolon-27]
	_ = x[Newline-28]
	_ = x[LeftParen-29]
	_ = x[RightParen-30]
	_ = x[LeftBrace-31]
	_ = x[RightBrace-32]
	_ = x[LeftBracket-33]
	_ = x[RightBracket-34]
	_ = x[True-35]
	_ = x[False-36]
	_ = x[Nil-37]
	_ = x[Def-38]
	_ = x[If-39]
	_ = x[Elsif-40]
	_ = x[Else-41]
	_ = x[While-42]
	_ = x[Break-43]
	_ = x[Continue-44]
	_ = x[Return-45]
}

const _TokenTag_name = "InvalidEOFIntLiteralFloatLiteralStringLiteralIdentifierEqNeLeGeLtGtAddSubMulDivModLetLetAddLetSubLetMulLetDivLetModBangArrowCommaColonSemicolonNewlineLeftParenRightParenLeftBraceRightBraceLeftBracketRightBracketTrueFalseNilDefIfElsifElseWhileBreakContinueReturn"

var _TokenTag_index = [...]uint16{0, 7, 10, 20, 32, 45, 55, 57, 59, 61, 63, 65, 67, 70, 73, 76, 79, 82, 85, 91, 97, 103, 109, 115, 119, 124, 129, 134, 143, 150, 159, 169, 178, 188, 199, 211, 215, 220, 223, 226, 228, 233, 237, 242, 247, 255, 261}

func (i TokenTag) String() string {
	if i < 0 || i >= TokenTag(len(_TokenTag_index)-1) {
		return "TokenTag(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenTag_name[_TokenTag_index[i]:_TokenTag_index[i+1]]
}
