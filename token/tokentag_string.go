// Code generated by "stringer -type=TokenTag token.go"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Invalid-0]
	_ = x[EOF-1]
	_ = x[IntLiteral-2]
	_ = x[FloatLiteral-3]
	_ = x[StringLiteral-4]
	_ = x[Identifier-5]
	_ = x[Eq-6]
	_ = x[Ne-7]
	_ = x[Le-8]
	_ = x[Ge-9]
	_ = x[Lt-10]
	_ = x[Gt-11]
	_ = x[Add-12]
	_ = x[Sub-13]
	_ = x[Mul-14]
	_ = x[Div-15]
	_ = x[Mod-16]
	_ = x[Let-17]
	_ = x[LetAdd-18]
	_ = x[LetSub-19]
	_ = x[LetMul-20]
	_ = x[LetDiv-21]
	_ = x[LetMod-22]
	_ = x[Arrow-23]
	_ = x[Comma-24]
	_ = x[Colon-25]
	_ = x[Semicolon-26]
	_ = x[Newline-27]
	_ = x[LeftParen-28]
	_ = x[RightParen-29]
	_ = x[LeftBrace-30]
	_ = x[RightBrace-31]
	_ = x[LeftBracket-32]
	_ = x[RightBracket-33]
	_ = x[True-34]
	_ = x[False-35]
	_ = x[Nil-36]
	_ = x[Def-37]
	_ = x[If-38]
	_ = x[Elsif-39]
	_ = x[Else-40]
	_ = x[While-41]
	_ = x[Break-42]
	_ = x[Continue-43]
	_ = x[Return-44]
}

const _TokenTag_name = "InvalidEOFIntLiteralFloatLiteralStringLiteralIdentifierEqNeLeGeLtGtAddSubMulDivModLetLetAddLetSubLetMulLetDivLetModArrowCommaColonSemicolonNewlineLeftParenRightParenLeftBraceRightBraceLeftBracketRightBracketTrueFalseNilDefIfElsifElseWhileBreakContinueReturn"

var _TokenTag_index = [...]uint16{0, 7, 10, 20, 32, 45, 55, 57, 59, 61, 63, 65, 67, 70, 73, 76, 79, 82, 85, 91, 97, 103, 109, 115, 120, 125, 130, 139, 146, 155, 165, 174, 184, 195, 207, 211, 216, 219, 222, 224, 229, 233, 238, 243, 251, 257}

func (i TokenTag) String() string {
	if i < 0 || i >= TokenTag(len(_TokenTag_index)-1) {
		return "TokenTag(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenTag_name[_TokenTag_index[i]:_TokenTag_index[i+1]]
}
